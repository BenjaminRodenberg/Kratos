name: Nightly Build

on:
  pull_request:
    paths:
    - '.github/workflows/nightly_build.yml'
    - '.github/workflows/configure.sh'
    - '.github/workflows/configure.cmd'
    - '.github/workflows/centos_configure.sh'

  schedule:
    - cron:  '0 1 * * *'

  workflow_dispatch:

# for cancelling redundant runs
concurrency:
  group: nightly-build-${{ github.head_ref }}
  cancel-in-progress: true


permissions:
  contents: read

jobs:
  ubuntu-nightly:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]
    env:
      KRATOS_BUILD_TYPE: Release
      OMPI_MCA_rmaps_base_oversubscribe: 1 # Allow oversubscription for MPI (needed for OpenMPI >= 3.0)
      OMPI_MCA_btl_vader_single_copy_mechanism: none # suppressing some annoying OpenMPI messages
      OMP_NUM_THREADS: 1 

    container:
      image: kratosmultiphysics/kratos-image-ci-ubuntu-22-04:latest
      options: --user 1001

    steps:
    - uses: actions/checkout@v3

    - name: Installing dependencies
      shell: bash
      run: |
        python3 -m pip install parameterized

    - name: Build
      shell: bash
      run: |
        if [ ${{ matrix.compiler }} = gcc ]; then
          export CC=/usr/bin/gcc-12
          export CXX=/usr/bin/g++-12
          export KRATOS_CMAKE_OPTIONS_FLAGS="-DUSE_EIGEN_MKL=ON -DUSE_EIGEN_FEAST=ON -DTRILINOS_EXCLUDE_AMESOS2_SOLVER=OFF -DMMG_ROOT=/external_libraries/mmg/mmg_5_5_1/ -DPMMG_ROOT=/external_libraries/ParMmg_5ffc6ad -DINCLUDE_PMMG=ON"
          export KRATOS_CMAKE_CXX_FLAGS="-Wignored-qualifiers"
        elif [ ${{ matrix.compiler }} = clang ]; then
          export CC=/usr/bin/clang-14
          export CXX=/usr/bin/clang++-14
          export KRATOS_CMAKE_OPTIONS_FLAGS="-DTRILINOS_EXCLUDE_AMESOS2_SOLVER=OFF -DMMG_ROOT=/external_libraries/mmg/mmg_5_5_1/"
        else
          echo 'Unsupported compiler: ${{ matrix.compiler }}'
          exit 1
        fi
        source /opt/intel/oneapi/setvars.sh
        cp .github/workflows/configure.sh configure.sh # maybe use different configure script in the future
        bash configure.sh

    - name: Running tests
      shell: bash
      run: |
        source /opt/intel/oneapi/setvars.sh
        export PYTHONPATH=${PYTHONPATH}:${GITHUB_WORKSPACE}/bin/${KRATOS_BUILD_TYPE}
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${GITHUB_WORKSPACE}/bin/${KRATOS_BUILD_TYPE}/libs
        python3 kratos/python_scripts/testing/run_tests.py -l nightly -a MultilevelMonteCarloApplication -c python3

    - name: Running Python MPI tests (2 Cores)
      shell: bash
      run: |
        source /opt/intel/oneapi/setvars.sh
        export PYTHONPATH=${PYTHONPATH}:${GITHUB_WORKSPACE}/bin/${KRATOS_BUILD_TYPE}
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${GITHUB_WORKSPACE}/bin/${KRATOS_BUILD_TYPE}/libs
        python3 kratos/python_scripts/testing/run_python_mpi_tests.py -a MultilevelMonteCarloApplication -l nightly -n 2

    - name: Running Python MPI tests (3 Cores)
      shell: bash
      run: |
        source /opt/intel/oneapi/setvars.sh
        export PYTHONPATH=${PYTHONPATH}:${GITHUB_WORKSPACE}/bin/${KRATOS_BUILD_TYPE}
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${GITHUB_WORKSPACE}/bin/${KRATOS_BUILD_TYPE}/libs
        python3 kratos/python_scripts/testing/run_python_mpi_tests.py -a MultilevelMonteCarloApplication -l nightly -n 3

    - name: Running Python MPI tests (4 Cores)
      shell: bash
      run: |
        source /opt/intel/oneapi/setvars.sh
        export PYTHONPATH=${PYTHONPATH}:${GITHUB_WORKSPACE}/bin/${KRATOS_BUILD_TYPE}
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${GITHUB_WORKSPACE}/bin/${KRATOS_BUILD_TYPE}/libs
        python3 kratos/python_scripts/testing/run_python_mpi_tests.py -a MultilevelMonteCarloApplication -l nightly -n 4
