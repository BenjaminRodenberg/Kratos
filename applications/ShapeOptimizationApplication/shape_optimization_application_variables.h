//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:         BSD License
//                   Kratos default license: kratos/license.txt
//
//  Main authors:    Reza Najian Asl
//

#if !defined(KRATOS_SHAPE_OPTIMIZATION_APPLICATION_VARIABLES_H_INCLUDED )
#define  KRATOS_SHAPE_OPTIMIZATION_APPLICATION_VARIABLES_H_INCLUDED

// System includes

// External includes

// Project includes
#include "includes/define.h"
#include "containers/variable.h"

namespace Kratos
{
	// Geometry variables
    KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, NORMALIZED_SURFACE_NORMAL);

    // Optimization variables
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DF1DX);

	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DF1DX_MAPPED);

	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC1DX);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC2DX);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC3DX);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC4DX);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC5DX);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC6DX);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC7DX);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC8DX);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC9DX);

	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC1DX_MAPPED);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC2DX_MAPPED);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC3DX_MAPPED);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC4DX_MAPPED);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC5DX_MAPPED);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC6DX_MAPPED);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC7DX_MAPPED);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC8DX_MAPPED);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DC9DX_MAPPED);

    KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, SEARCH_DIRECTION);
    KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, CORRECTION);
    KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, CONTROL_POINT_UPDATE);
    KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, CONTROL_POINT_CHANGE);
    KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, SHAPE_UPDATE);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, SHAPE_CHANGE);
    KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, MESH_CHANGE);

	// For edge damping
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, DAMPING_FACTOR);

    // For mapping
    KRATOS_DEFINE_APPLICATION_VARIABLE(SHAPE_OPTIMIZATION_APPLICATION, int,MAPPING_ID);

	// For bead optimization
    KRATOS_DEFINE_APPLICATION_VARIABLE(SHAPE_OPTIMIZATION_APPLICATION, double,ALPHA);
    KRATOS_DEFINE_APPLICATION_VARIABLE(SHAPE_OPTIMIZATION_APPLICATION, double,ALPHA_MAPPED);
    KRATOS_DEFINE_APPLICATION_VARIABLE(SHAPE_OPTIMIZATION_APPLICATION, double,DF1DALPHA);
    KRATOS_DEFINE_APPLICATION_VARIABLE(SHAPE_OPTIMIZATION_APPLICATION, double,DF1DALPHA_MAPPED);
    KRATOS_DEFINE_APPLICATION_VARIABLE(SHAPE_OPTIMIZATION_APPLICATION, double,DPDALPHA);
    KRATOS_DEFINE_APPLICATION_VARIABLE(SHAPE_OPTIMIZATION_APPLICATION, double,DPDALPHA_MAPPED);
    KRATOS_DEFINE_APPLICATION_VARIABLE(SHAPE_OPTIMIZATION_APPLICATION, double,DLDALPHA);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, BEAD_DIRECTION);

    // For auxiliary operations
    KRATOS_DEFINE_APPLICATION_VARIABLE(SHAPE_OPTIMIZATION_APPLICATION, double,SCALAR_VARIABLE);
    KRATOS_DEFINE_APPLICATION_VARIABLE(SHAPE_OPTIMIZATION_APPLICATION, double,SCALAR_VARIABLE_MAPPED);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, VECTOR_VARIABLE);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, VECTOR_VARIABLE_MAPPED);

	// For in plane mapping operations
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, BACKGROUND_COORDINATE);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, BACKGROUND_NORMAL);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS(SHAPE_OPTIMIZATION_APPLICATION, OUT_OF_PLANE_DELTA);

	// For implicit vertex-morphing with Helmholtz PDE
	KRATOS_DEFINE_VARIABLE( Matrix, HELMHOLTZ_MASS_MATRIX );
    KRATOS_DEFINE_VARIABLE( int, HELMHOLTZ_DIRECTION );
	KRATOS_DEFINE_VARIABLE( double, HELMHOLTZ_RADIUS );
	KRATOS_DEFINE_VARIABLE( bool, COMPUTE_CONTROL_POINTS );
    KRATOS_DEFINE_VARIABLE( double, HELMHOLTZ_POISSON_RATIO );
    KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS( SHAPE_OPTIMIZATION_APPLICATION, HELMHOLTZ_VARS);
    KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS( SHAPE_OPTIMIZATION_APPLICATION, HELMHOLTZ_SOURCE);
	KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS( SHAPE_OPTIMIZATION_APPLICATION, CONTROL_POINT);

}

#endif	/* KRATOS_SHAPE_OPTIMIZATION_APPLICATION_VARIABLES_H_INCLUDED */
